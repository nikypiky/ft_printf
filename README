# Overview

This project is a custom implementation of the printf function in C, written without using standard library formatting functions. It supports various format specifiers and demonstrates low-level memory handling, variadic functions, and custom output formatting.
Features

    Supports format specifiers: %c, %s, %p, %d, %i, %u, %x, %X, %%
    Handles string and integer conversions
    Uses variadic arguments (stdarg.h) to process input dynamically
    Includes custom helper functions (see repository for details)

## Usage

#include "libftprintf.h"

int main()
{
    ft_printf("Hello, %s! The number is %d\n", "world", 42);
    return 0;
}

## Why This Project?

This project was built as part of an exercise to deepen my understanding of C programming, particularly:

    Variadic functions (va_list)
    String and number formatting without standard helper functions
    Writing efficient, modular C code

### Notes

This project was originally developed within the 42 school curriculum but has been improved independently. The repository contains additional helper functions for handling string formatting.
